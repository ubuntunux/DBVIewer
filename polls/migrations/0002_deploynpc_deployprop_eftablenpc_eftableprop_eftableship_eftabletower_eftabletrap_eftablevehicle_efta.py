# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-23 16:59
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('polls', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeployNpc',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('zone_primarykey', models.TextField(blank=True, db_column='Zone_PrimaryKey', null=True)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('deploy_count', models.TextField(blank=True, db_column='Deploy_Count', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'Deploy_Npc',
            },
        ),
        migrations.CreateModel(
            name='DeployProp',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('zone_primarykey', models.TextField(blank=True, db_column='Zone_PrimaryKey', null=True)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('deploy_count', models.TextField(blank=True, db_column='Deploy_Count', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'Deploy_Prop',
            },
        ),
        migrations.CreateModel(
            name='EftableNpc',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('secondarykey', models.TextField(blank=True, db_column='SecondaryKey', null=True)),
                ('titlename', models.TextField(blank=True, db_column='TitleName', null=True)),
                ('titlenamecomment', models.TextField(blank=True, db_column='TitleNameComment', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('comment1', models.TextField(blank=True, db_column='Comment1', null=True)),
                ('nametag', models.TextField(blank=True, db_column='NameTag', null=True)),
                ('balloonnamehide', models.TextField(blank=True, db_column='BalloonNameHide', null=True)),
                ('icon', models.TextField(blank=True, db_column='Icon', null=True)),
                ('level', models.TextField(blank=True, db_column='Level', null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('modelsize', models.TextField(blank=True, db_column='ModelSize', null=True)),
                ('grade', models.TextField(blank=True, db_column='Grade', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('type1', models.TextField(blank=True, db_column='Type1', null=True)),
                ('bekilledshare', models.TextField(blank=True, db_column='BeKilledShare', null=True)),
                ('size', models.TextField(blank=True, db_column='Size', null=True)),
                ('weight', models.TextField(blank=True, db_column='Weight', null=True)),
                ('parts', models.TextField(blank=True, db_column='Parts', null=True)),
                ('dietype', models.TextField(blank=True, db_column='DieType', null=True)),
                ('dieani', models.TextField(blank=True, db_column='DieAni', null=True)),
                ('diephysics', models.TextField(blank=True, db_column='DiePhysics', null=True)),
                ('diegibs', models.TextField(blank=True, db_column='DieGibs', null=True)),
                ('invoketrigger', models.TextField(blank=True, db_column='InvokeTrigger', null=True)),
                ('exp', models.TextField(blank=True, db_column='Exp', null=True)),
                ('moneypercent', models.TextField(blank=True, db_column='MoneyPercent', null=True)),
                ('moneyvalue', models.TextField(blank=True, db_column='MoneyValue', null=True)),
                ('dropindex1', models.TextField(blank=True, db_column='DropIndex1', null=True)),
                ('dropindex2', models.TextField(blank=True, db_column='DropIndex2', null=True)),
                ('dropindex3', models.TextField(blank=True, db_column='DropIndex3', null=True)),
                ('interactionrange', models.TextField(blank=True, db_column='InteractionRange', null=True)),
                ('pathfindingtype', models.TextField(blank=True, db_column='PathfindingType', null=True)),
                ('movecollison', models.TextField(blank=True, db_column='MoveCollison', null=True)),
                ('blockpcrootmotionskillpenetrate', models.TextField(blank=True, db_column='BlockPCRootMotionSkillPenetrate', null=True)),
                ('immuneindex', models.TextField(blank=True, db_column='ImmuneIndex', null=True)),
                ('ticketdistance', models.TextField(blank=True, db_column='Ticketdistance', null=True)),
                ('detourrange', models.TextField(blank=True, db_column='Detourrange', null=True)),
                ('showdamagehighlight', models.TextField(blank=True, db_column='ShowDamageHighlight', null=True)),
                ('behittwistyawmin', models.TextField(blank=True, db_column='BehitTwistYawMin', null=True)),
                ('behittwistyawmax', models.TextField(blank=True, db_column='BehitTwistYawMax', null=True)),
                ('behittwistpitchmin', models.TextField(blank=True, db_column='BehitTwistPitchMin', null=True)),
                ('behittwistpitchmax', models.TextField(blank=True, db_column='BehitTwistPitchMax', null=True)),
                ('behittwistrollmin', models.TextField(blank=True, db_column='BehitTwistRollMin', null=True)),
                ('behittwistrollmax', models.TextField(blank=True, db_column='BehitTwistRollMax', null=True)),
                ('minimumdistance', models.TextField(blank=True, db_column='MinimumDistance', null=True)),
                ('stattype', models.TextField(blank=True, db_column='StatType', null=True)),
                ('attackpower', models.TextField(blank=True, db_column='AttackPower', null=True)),
                ('hp', models.TextField(blank=True, db_column='Hp', null=True)),
                ('hp_count', models.TextField(blank=True, db_column='Hp_Count', null=True)),
                ('mp', models.TextField(blank=True, db_column='Mp', null=True)),
                ('combathprecovery', models.TextField(blank=True, db_column='CombatHpRecovery', null=True)),
                ('targetui', models.TextField(blank=True, db_column='TargetUI', null=True)),
                ('targetui_design', models.TextField(blank=True, db_column='TargetUI_Design', null=True)),
                ('lifevessel', models.TextField(blank=True, db_column='LifeVessel', null=True)),
                ('walkspeed', models.TextField(blank=True, db_column='WalkSpeed', null=True)),
                ('movespeed', models.TextField(blank=True, db_column='MoveSpeed', null=True)),
                ('attribute', models.TextField(blank=True, db_column='Attribute', null=True)),
                ('coefficient', models.TextField(blank=True, db_column='Coefficient', null=True)),
                ('hitratio', models.TextField(blank=True, db_column='Hitratio', null=True)),
                ('crtratio', models.TextField(blank=True, db_column='Crtratio', null=True)),
                ('dodge', models.TextField(blank=True, db_column='Dodge', null=True)),
                ('def_field', models.TextField(blank=True, db_column='Def', null=True)),
                ('res', models.TextField(blank=True, db_column='Res', null=True)),
                ('crtblock', models.TextField(blank=True, db_column='Crtblock', null=True)),
                ('aiindex', models.TextField(blank=True, db_column='AiIndex', null=True)),
                ('aggrotype', models.TextField(blank=True, db_column='AggroType', null=True)),
                ('aggrotickmin', models.TextField(blank=True, db_column='AggroTickMin', null=True)),
                ('aggrotickmax', models.TextField(blank=True, db_column='AggroTickMax', null=True)),
                ('attacktype', models.TextField(blank=True, db_column='AttackType', null=True)),
                ('moverange', models.TextField(blank=True, db_column='MoveRange', null=True)),
                ('warrange', models.TextField(blank=True, db_column='WarRange', null=True)),
                ('pursuitrange', models.TextField(blank=True, db_column='PursuitRange', null=True)),
                ('sptime', models.TextField(blank=True, db_column='SpTime', null=True)),
                ('spinvincibleduration', models.TextField(blank=True, db_column='SpInvincibleDuration', null=True)),
                ('dieskillindex', models.TextField(blank=True, db_column='DieSkillIndex', null=True)),
                ('dieskillpercent', models.TextField(blank=True, db_column='DieSkillPercent', null=True)),
                ('borderline', models.TextField(blank=True, db_column='BorderLine', null=True)),
                ('destroyskillindex', models.TextField(blank=True, db_column='DestroySkillIndex', null=True)),
                ('destroyskillpercent', models.TextField(blank=True, db_column='DestroySkillPercent', null=True)),
                ('spbuffindex1', models.TextField(blank=True, db_column='SpBuffIndex1', null=True)),
                ('spbuffindex2', models.TextField(blank=True, db_column='SpBuffIndex2', null=True)),
                ('spbuffindex3', models.TextField(blank=True, db_column='SpBuffIndex3', null=True)),
                ('sighttype', models.TextField(blank=True, db_column='SightType', null=True)),
                ('sightangle1', models.TextField(blank=True, db_column='SightAngle1', null=True)),
                ('sightrange1', models.TextField(blank=True, db_column='SightRange1', null=True)),
                ('sightangle2', models.TextField(blank=True, db_column='SightAngle2', null=True)),
                ('sightrange2', models.TextField(blank=True, db_column='SightRange2', null=True)),
                ('watchangle', models.TextField(blank=True, db_column='WatchAngle', null=True)),
                ('tribe', models.TextField(blank=True, db_column='Tribe', null=True)),
                ('helptype', models.TextField(blank=True, db_column='HelpType', null=True)),
                ('helprange', models.TextField(blank=True, db_column='HelpRange', null=True)),
                ('helpvalue', models.TextField(blank=True, db_column='HelpValue', null=True)),
                ('warlikevalue', models.TextField(blank=True, db_column='WarlikeValue', null=True)),
                ('attackcooltimemin', models.TextField(blank=True, db_column='AttackCooltimeMin', null=True)),
                ('attackcooltimemax', models.TextField(blank=True, db_column='AttackCooltimeMax', null=True)),
                ('firstskill1', models.TextField(blank=True, db_column='FirstSkill1', null=True)),
                ('firstskill2', models.TextField(blank=True, db_column='FirstSkill2', null=True)),
                ('firstskill1per', models.TextField(blank=True, db_column='FirstSkill1Per', null=True)),
                ('firstskill2per', models.TextField(blank=True, db_column='FirstSkill2Per', null=True)),
                ('secondskill1', models.TextField(blank=True, db_column='SecondSkill1', null=True)),
                ('secondskill2', models.TextField(blank=True, db_column='SecondSkill2', null=True)),
                ('secondskill3', models.TextField(blank=True, db_column='SecondSkill3', null=True)),
                ('secondskill4', models.TextField(blank=True, db_column='SecondSkill4', null=True)),
                ('secondskill1per', models.TextField(blank=True, db_column='SecondSkill1Per', null=True)),
                ('secondskill2per', models.TextField(blank=True, db_column='SecondSkill2Per', null=True)),
                ('secondskill3per', models.TextField(blank=True, db_column='SecondSkill3Per', null=True)),
                ('secondskill4per', models.TextField(blank=True, db_column='SecondSkill4Per', null=True)),
                ('modpoint01', models.TextField(blank=True, db_column='ModPoint01', null=True)),
                ('modsignet01min', models.TextField(blank=True, db_column='ModSignet01Min', null=True)),
                ('modsignet01max', models.TextField(blank=True, db_column='ModSignet01Max', null=True)),
                ('behitdistrate', models.TextField(blank=True, db_column='BehitDistRate', null=True)),
                ('behitheightrate', models.TextField(blank=True, db_column='BehitHeightRate', null=True)),
                ('behittimerate', models.TextField(blank=True, db_column='BehitTimeRate', null=True)),
                ('dieragdollvalueratestart', models.TextField(blank=True, db_column='DieRagDollValueRateStart', null=True)),
                ('dieragdollvalueratechange', models.TextField(blank=True, db_column='DieRagDollValueRateChange', null=True)),
                ('dieragdollvalueratedest', models.TextField(blank=True, db_column='DieRagDollValueRateDest', null=True)),
                ('function', models.TextField(blank=True, db_column='Function', null=True)),
                ('functiontype', models.TextField(blank=True, db_column='FunctionType', null=True)),
                ('functionname', models.TextField(blank=True, db_column='FunctionName', null=True)),
                ('relation', models.TextField(blank=True, db_column='Relation', null=True)),
                ('subfactionid', models.TextField(blank=True, db_column='SubFactionId', null=True)),
                ('attack', models.TextField(blank=True, db_column='Attack', null=True)),
                ('summonduration', models.TextField(blank=True, db_column='SummonDuration', null=True)),
                ('unsummontype', models.TextField(blank=True, db_column='UnsummonType', null=True)),
                ('mapicon', models.TextField(blank=True, db_column='MapIcon', null=True)),
                ('mappriority', models.TextField(blank=True, db_column='MapPriority', null=True)),
                ('interactionkeyicon', models.TextField(blank=True, db_column='InteractionKeyIcon', null=True)),
                ('interactionkeystring', models.TextField(blank=True, db_column='InteractionKeyString', null=True)),
                ('clickactionid', models.TextField(blank=True, db_column='ClickActionId', null=True)),
                ('clickactiontime', models.TextField(blank=True, db_column='ClickActionTime', null=True)),
                ('commonactiondesc', models.TextField(blank=True, db_column='CommonActionDesc', null=True)),
                ('attacktargetdistance', models.TextField(blank=True, db_column='AttackTargetDistance', null=True)),
                ('summontype', models.TextField(blank=True, db_column='SummonType', null=True)),
                ('summonspawnaction', models.TextField(blank=True, db_column='SummonSpawnAction', null=True)),
                ('summonaitype', models.TextField(blank=True, db_column='SummonAiType', null=True)),
                ('summonlifetime', models.TextField(blank=True, db_column='SummonLifetime', null=True)),
                ('summongroup', models.TextField(blank=True, db_column='SummonGroup', null=True)),
                ('summoncount', models.TextField(blank=True, db_column='SummonCount', null=True)),
                ('exclusiongroup', models.TextField(blank=True, db_column='ExclusionGroup', null=True)),
                ('exclusionrange', models.TextField(blank=True, db_column='ExclusionRange', null=True)),
                ('summonamount', models.TextField(blank=True, db_column='SummonAmount', null=True)),
                ('summonfollowrange', models.TextField(blank=True, db_column='SummonFollowRange', null=True)),
                ('summonapproachrange', models.TextField(blank=True, db_column='SummonApproachRange', null=True)),
                ('attacksightrange1', models.TextField(blank=True, db_column='AttackSightRange1', null=True)),
                ('summonreturnrange', models.TextField(blank=True, db_column='SummonReturnRange', null=True)),
                ('particlesoundpackage', models.TextField(blank=True, db_column='ParticleSoundPackage', null=True)),
                ('synctarget', models.TextField(blank=True, db_column='SyncTarget', null=True)),
                ('stiffenpointmax', models.TextField(blank=True, db_column='StiffenPointMax', null=True)),
                ('stiffenpointdecrease', models.TextField(blank=True, db_column='StiffenPointDecrease', null=True)),
                ('paralyzationpointmin', models.TextField(blank=True, db_column='ParalyzationPointMin', null=True)),
                ('paralyzationpointmax', models.TextField(blank=True, db_column='ParalyzationPointMax', null=True)),
                ('paralyzationpointdecrease', models.TextField(blank=True, db_column='ParalyzationPointDecrease', null=True)),
                ('paralyzationpercent', models.TextField(blank=True, db_column='ParalyzationPercent', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'EFTable_Npc',
            },
        ),
        migrations.CreateModel(
            name='EftableProp',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('secondarykey', models.TextField(blank=True, db_column='SecondaryKey', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('nametag', models.TextField(blank=True, db_column='NameTag', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('touchtype', models.TextField(blank=True, db_column='TouchType', null=True)),
                ('volumetype', models.TextField(blank=True, db_column='VolumeType', null=True)),
                ('pickuptype', models.TextField(blank=True, db_column='PickupType', null=True)),
                ('contenttype', models.TextField(blank=True, db_column='ContentType', null=True)),
                ('zoneobject', models.TextField(blank=True, db_column='ZoneObject', null=True)),
                ('actorclass', models.TextField(blank=True, db_column='ActorClass', null=True)),
                ('level', models.TextField(blank=True, db_column='Level', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('scale', models.TextField(blank=True, db_column='Scale', null=True)),
                ('debris', models.TextField(blank=True, db_column='Debris', null=True)),
                ('blockprojectile', models.TextField(blank=True, db_column='BlockProjectile', null=True)),
                ('hittype', models.TextField(blank=True, db_column='HitType', null=True)),
                ('hitamount', models.TextField(blank=True, db_column='HitAmount', null=True)),
                ('hitstep1', models.TextField(blank=True, db_column='HitStep1', null=True)),
                ('hitstep2', models.TextField(blank=True, db_column='HitStep2', null=True)),
                ('hitstep3', models.TextField(blank=True, db_column='HitStep3', null=True)),
                ('touchamount', models.TextField(blank=True, db_column='TouchAmount', null=True)),
                ('touchregentime', models.TextField(blank=True, db_column='TouchRegenTime', null=True)),
                ('restoredelay', models.TextField(blank=True, db_column='RestoreDelay', null=True)),
                ('touchontime', models.TextField(blank=True, db_column='TouchOnTime', null=True)),
                ('touchofftime', models.TextField(blank=True, db_column='TouchOffTime', null=True)),
                ('touchrotationdestdegree', models.TextField(blank=True, db_column='TouchRotationDestDegree', null=True)),
                ('touchrotationangularspeed', models.TextField(blank=True, db_column='TouchRotationAngularSpeed', null=True)),
                ('touchrotationautorevert', models.TextField(blank=True, db_column='TouchRotationAutoRevert', null=True)),
                ('jointhp', models.TextField(blank=True, db_column='JointHP', null=True)),
                ('jointdamage', models.TextField(blank=True, db_column='JointDamage', null=True)),
                ('interactionrange', models.TextField(blank=True, db_column='InteractionRange', null=True)),
                ('pickupduration', models.TextField(blank=True, db_column='PickupDuration', null=True)),
                ('pickupdroplifetime', models.TextField(blank=True, db_column='PickupDropLifetime', null=True)),
                ('pickupuseconditionid', models.TextField(blank=True, db_column='PickupUseConditionId', null=True)),
                ('pickupuseactionid', models.TextField(blank=True, db_column='PickupUseActionId', null=True)),
                ('pickupusetargettype', models.TextField(blank=True, db_column='PickupUseTargetType', null=True)),
                ('pickupusetargetid', models.TextField(blank=True, db_column='PickupUseTargetId', null=True)),
                ('pickupusetargetrange', models.TextField(blank=True, db_column='PickupUseTargetRange', null=True)),
                ('pickupmovemotion', models.TextField(blank=True, db_column='PickupMoveMotion', null=True)),
                ('pickupmovespeed', models.TextField(blank=True, db_column='PickupMoveSpeed', null=True)),
                ('pickupdropcommonactionindex', models.TextField(blank=True, db_column='PickupDropCommonActionIndex', null=True)),
                ('pickupthrowcommonactionindex', models.TextField(blank=True, db_column='PickupThrowCommonActionIndex', null=True)),
                ('pickupthrowprojectileid', models.TextField(blank=True, db_column='PickupThrowProjectileId', null=True)),
                ('pickupthrowprojectilebound', models.TextField(blank=True, db_column='PickupThrowProjectileBound', null=True)),
                ('pickuphitcount', models.TextField(blank=True, db_column='PickupHitCount', null=True)),
                ('commonactionindex', models.TextField(blank=True, db_column='CommonActionIndex', null=True)),
                ('commonactiontime', models.TextField(blank=True, db_column='CommonActionTime', null=True)),
                ('commonactiondesc', models.TextField(blank=True, db_column='CommonActionDesc', null=True)),
                ('blocking', models.TextField(blank=True, db_column='Blocking', null=True)),
                ('clickicon', models.TextField(blank=True, db_column='ClickIcon', null=True)),
                ('conditionid', models.TextField(blank=True, db_column='ConditionId', null=True)),
                ('executeactionid', models.TextField(blank=True, db_column='ExecuteActionId', null=True)),
                ('executeactioncount', models.TextField(blank=True, db_column='ExecuteActionCount', null=True)),
                ('stateonactionid', models.TextField(blank=True, db_column='StateOnActionId', null=True)),
                ('stateoffactionid', models.TextField(blank=True, db_column='StateOffActionId', null=True)),
                ('usageactionid', models.TextField(blank=True, db_column='UsageActionId', null=True)),
                ('spawnactionid', models.TextField(blank=True, db_column='SpawnActionId', null=True)),
                ('assembleontrasit', models.TextField(blank=True, db_column='AssembleOnTrasit', null=True)),
                ('assemblegooffstring', models.TextField(blank=True, db_column='AssembleGoOffString', null=True)),
                ('assembleoffstring', models.TextField(blank=True, db_column='AssembleOffString', null=True)),
                ('questid', models.TextField(blank=True, db_column='QuestId', null=True)),
                ('defaultaction', models.TextField(blank=True, db_column='DefaultAction', null=True)),
                ('skillid0', models.TextField(blank=True, db_column='SkillId0', null=True)),
                ('skillcount0', models.TextField(blank=True, db_column='SkillCount0', null=True)),
                ('skillid1', models.TextField(blank=True, db_column='SkillId1', null=True)),
                ('skillcount1', models.TextField(blank=True, db_column='SkillCount1', null=True)),
                ('skillid2', models.TextField(blank=True, db_column='SkillId2', null=True)),
                ('skillcount2', models.TextField(blank=True, db_column='SkillCount2', null=True)),
                ('gaugerechargable', models.TextField(blank=True, db_column='GaugeRechargable', null=True)),
                ('gaugestart', models.TextField(blank=True, db_column='GaugeStart', null=True)),
                ('gaugemax', models.TextField(blank=True, db_column='GaugeMax', null=True)),
                ('commonactionid0', models.TextField(blank=True, db_column='CommonActionId0', null=True)),
                ('commonactioncount0', models.TextField(blank=True, db_column='CommonActionCount0', null=True)),
                ('commonactionid1', models.TextField(blank=True, db_column='CommonActionId1', null=True)),
                ('commonactioncount1', models.TextField(blank=True, db_column='CommonActionCount1', null=True)),
                ('commonactionid2', models.TextField(blank=True, db_column='CommonActionId2', null=True)),
                ('commonactioncount2', models.TextField(blank=True, db_column='CommonActionCount2', null=True)),
                ('mapicon', models.TextField(blank=True, db_column='MapIcon', null=True)),
                ('mappriority', models.TextField(blank=True, db_column='MapPriority', null=True)),
                ('interactionkeyicon', models.TextField(blank=True, db_column='InteractionKeyIcon', null=True)),
                ('interactionkeystring', models.TextField(blank=True, db_column='InteractionKeyString', null=True)),
                ('professiontype', models.TextField(blank=True, db_column='ProfessionType', null=True)),
                ('lifemethodgrade', models.TextField(blank=True, db_column='LifeMethodGrade', null=True)),
                ('lifecastingtier1', models.TextField(blank=True, db_column='LifeCastingTier1', null=True)),
                ('lifecastingtier2', models.TextField(blank=True, db_column='LifeCastingTier2', null=True)),
                ('lifecastingtier3', models.TextField(blank=True, db_column='LifeCastingTier3', null=True)),
                ('lifecastingtier4', models.TextField(blank=True, db_column='LifeCastingTier4', null=True)),
                ('lifecastingtier5', models.TextField(blank=True, db_column='LifeCastingTier5', null=True)),
                ('lifecastingtier6', models.TextField(blank=True, db_column='LifeCastingTier6', null=True)),
                ('lifeexp', models.TextField(blank=True, db_column='LifeExp', null=True)),
                ('lifedurability_success', models.TextField(blank=True, db_column='LifeDurability_Success', null=True)),
                ('lifedurability_fail', models.TextField(blank=True, db_column='LifeDurability_Fail', null=True)),
                ('successrate_f', models.TextField(blank=True, db_column='SuccessRate_F', null=True)),
                ('successrate_d', models.TextField(blank=True, db_column='SuccessRate_D', null=True)),
                ('successrate_c', models.TextField(blank=True, db_column='SuccessRate_C', null=True)),
                ('successrate_b', models.TextField(blank=True, db_column='SuccessRate_B', null=True)),
                ('successrate_a', models.TextField(blank=True, db_column='SuccessRate_A', null=True)),
                ('successrate_s', models.TextField(blank=True, db_column='SuccessRate_S', null=True)),
                ('lifeitemdroptype', models.TextField(blank=True, db_column='LifeItemDropType', null=True)),
                ('lifeitemdropindex', models.TextField(blank=True, db_column='LifeItemDropIndex', null=True)),
                ('lifeitemdropindex_fail', models.TextField(blank=True, db_column='LifeItemDropIndex_Fail', null=True)),
                ('miningbombrange', models.TextField(blank=True, db_column='MiningBombRange', null=True)),
                ('miningbombmaxtargetcount', models.TextField(blank=True, db_column='MiningBombMaxTargetCount', null=True)),
                ('lifeextraconditionidonsuccess', models.TextField(blank=True, db_column='LifeExtraConditionIdOnSuccess', null=True)),
                ('lifeextraactionidonsuccess', models.TextField(blank=True, db_column='LifeExtraActionIdOnSuccess', null=True)),
                ('lifeextraactiononsuccessratio', models.TextField(blank=True, db_column='LifeExtraActionOnSuccessRatio', null=True)),
                ('lifeextraconditionidonfail', models.TextField(blank=True, db_column='LifeExtraConditionIdOnFail', null=True)),
                ('lifeextraactionidonfail', models.TextField(blank=True, db_column='LifeExtraActionIdOnFail', null=True)),
                ('barehandratio', models.TextField(blank=True, db_column='BareHandRatio', null=True)),
                ('squareholecontinent', models.TextField(blank=True, db_column='SquareHoleContinent', null=True)),
                ('squareholemapindex', models.TextField(blank=True, db_column='SquareHoleMapIndex', null=True)),
                ('squareholelevel', models.TextField(blank=True, db_column='SquareHoleLevel', null=True)),
                ('squareholeuselevel', models.TextField(blank=True, db_column='SquareHoleUseLevel', null=True)),
                ('squareholecostmoneybase', models.TextField(blank=True, db_column='SquareHoleCostMoneyBase', null=True)),
                ('squareholecostitemindex', models.TextField(blank=True, db_column='SquareHoleCostItemIndex', null=True)),
                ('squarehole_ui_xlocation', models.TextField(blank=True, db_column='SquareHole_UI_Xlocation', null=True)),
                ('squarehole_ui_ylocation', models.TextField(blank=True, db_column='SquareHole_UI_Ylocation', null=True)),
                ('spawnactiontime', models.TextField(blank=True, db_column='SpawnActionTime', null=True)),
                ('despawnactiontime', models.TextField(blank=True, db_column='DespawnActionTime', null=True)),
                ('spawnannouncemsg', models.TextField(blank=True, db_column='SpawnAnnounceMsg', null=True)),
                ('commonactiondesc_variation', models.TextField(blank=True, db_column='CommonActionDesc_Variation', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'EFTable_Prop',
            },
        ),
        migrations.CreateModel(
            name='EftableShip',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('secondarykey', models.TextField(blank=True, db_column='SecondaryKey', null=True)),
                ('icon', models.TextField(blank=True, db_column='Icon', null=True)),
                ('iconindex', models.TextField(blank=True, db_column='IconIndex', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('collisionx', models.TextField(blank=True, db_column='CollisionX', null=True)),
                ('collisionz', models.TextField(blank=True, db_column='CollisionZ', null=True)),
                ('movespeed', models.TextField(blank=True, db_column='MoveSpeed', null=True)),
                ('movespeedd', models.TextField(blank=True, db_column='MoveSpeedD', null=True)),
                ('revolve', models.TextField(blank=True, db_column='Revolve', null=True)),
                ('maxsupply', models.TextField(blank=True, db_column='MaxSupply', null=True)),
                ('maxcrew', models.TextField(blank=True, db_column='MaxCrew', null=True)),
                ('skillid0', models.TextField(blank=True, db_column='SkillId0', null=True)),
                ('skillid1', models.TextField(blank=True, db_column='SkillId1', null=True)),
                ('skillid2', models.TextField(blank=True, db_column='SkillId2', null=True)),
                ('skillid3', models.TextField(blank=True, db_column='SkillId3', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'EFTable_Ship',
            },
        ),
        migrations.CreateModel(
            name='EftableTower',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('secondarykey', models.TextField(blank=True, db_column='SecondaryKey', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('radius', models.TextField(blank=True, db_column='Radius', null=True)),
                ('height', models.TextField(blank=True, db_column='Height', null=True)),
                ('faction', models.TextField(blank=True, db_column='Faction', null=True)),
                ('subfactionid', models.TextField(blank=True, db_column='SubFactionId', null=True)),
                ('hptype', models.TextField(blank=True, db_column='HpType', null=True)),
                ('maxhp', models.TextField(blank=True, db_column='MaxHp', null=True)),
                ('respawntype', models.TextField(blank=True, db_column='RespawnType', null=True)),
                ('respawndelay', models.TextField(blank=True, db_column='RespawnDelay', null=True)),
                ('npclifetime', models.TextField(blank=True, db_column='NpcLifetime', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'EFTable_Tower',
            },
        ),
        migrations.CreateModel(
            name='EftableTrap',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('secondarykey', models.TextField(blank=True, db_column='SecondaryKey', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('scale', models.TextField(blank=True, db_column='Scale', null=True)),
                ('coltype', models.TextField(blank=True, db_column='ColType', null=True)),
                ('colx', models.TextField(blank=True, db_column='ColX', null=True)),
                ('coly', models.TextField(blank=True, db_column='ColY', null=True)),
                ('overicon', models.TextField(blank=True, db_column='OverIcon', null=True)),
                ('overnametag', models.TextField(blank=True, db_column='OverNameTag', null=True)),
                ('visibility', models.TextField(blank=True, db_column='Visibility', null=True)),
                ('actiontype', models.TextField(blank=True, db_column='ActionType', null=True)),
                ('actionindex', models.TextField(blank=True, db_column='ActionIndex', null=True)),
                ('actiontime', models.TextField(blank=True, db_column='ActionTime', null=True)),
                ('lifetime', models.TextField(blank=True, db_column='Lifetime', null=True)),
                ('hp', models.TextField(blank=True, db_column='Hp', null=True)),
                ('faction', models.TextField(blank=True, db_column='Faction', null=True)),
                ('subfactionid', models.TextField(blank=True, db_column='SubFactionId', null=True)),
                ('activetime', models.TextField(blank=True, db_column='ActiveTime', null=True)),
                ('expireonmasterabsence', models.TextField(blank=True, db_column='ExpireOnMasterAbsence', null=True)),
                ('explodedelay', models.TextField(blank=True, db_column='ExplodeDelay', null=True)),
                ('destroydelay', models.TextField(blank=True, db_column='DestroyDelay', null=True)),
                ('summongroup', models.TextField(blank=True, db_column='SummonGroup', null=True)),
                ('summoncount', models.TextField(blank=True, db_column='SummonCount', null=True)),
                ('exclusiongroup', models.TextField(blank=True, db_column='ExclusionGroup', null=True)),
                ('exclusionrange', models.TextField(blank=True, db_column='ExclusionRange', null=True)),
                ('effectinvoke1', models.TextField(blank=True, db_column='EffectInvoke1', null=True)),
                ('effectinvokecount1', models.TextField(blank=True, db_column='EffectInvokeCount1', null=True)),
                ('effectinvoke2', models.TextField(blank=True, db_column='EffectInvoke2', null=True)),
                ('effectinvokecount2', models.TextField(blank=True, db_column='EffectInvokeCount2', null=True)),
                ('effectcount', models.TextField(blank=True, db_column='EffectCount', null=True)),
                ('effectdelay', models.TextField(blank=True, db_column='EffectDelay', null=True)),
                ('effectcooldown', models.TextField(blank=True, db_column='EffectCooldown', null=True)),
                ('effectbatchcount', models.TextField(blank=True, db_column='EffectBatchCount', null=True)),
                ('effectbatchtick', models.TextField(blank=True, db_column='EffectBatchTick', null=True)),
                ('effectmulti', models.TextField(blank=True, db_column='EffectMulti', null=True)),
                ('effectmovetarget', models.TextField(blank=True, db_column='EffectMoveTarget', null=True)),
                ('effectfiltertarget', models.TextField(blank=True, db_column='EffectFilterTarget', null=True)),
                ('uninstall', models.TextField(blank=True, db_column='Uninstall', null=True)),
                ('uninstallaffinity', models.TextField(blank=True, db_column='UninstallAffinity', null=True)),
                ('uninstallrange', models.TextField(blank=True, db_column='UninstallRange', null=True)),
                ('reactcoltype', models.TextField(blank=True, db_column='ReactColType', null=True)),
                ('reactcolx', models.TextField(blank=True, db_column='ReactColX', null=True)),
                ('reactcoly', models.TextField(blank=True, db_column='ReactColY', null=True)),
                ('touchaffinity', models.TextField(blank=True, db_column='TouchAffinity', null=True)),
                ('touchrange', models.TextField(blank=True, db_column='TouchRange', null=True)),
                ('linkaffinity', models.TextField(blank=True, db_column='LinkAffinity', null=True)),
                ('linkcount', models.TextField(blank=True, db_column='LinkCount', null=True)),
                ('linkrange', models.TextField(blank=True, db_column='LinkRange', null=True)),
                ('inputrange', models.TextField(blank=True, db_column='InputRange', null=True)),
                ('synctransition', models.TextField(blank=True, db_column='SyncTransition', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'EFTable_Trap',
            },
        ),
        migrations.CreateModel(
            name='EftableVehicle',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('secondarykey', models.TextField(blank=True, db_column='SecondaryKey', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('comment1', models.TextField(blank=True, db_column='Comment1', null=True)),
                ('model', models.TextField(blank=True, db_column='Model', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('modelsize', models.TextField(blank=True, db_column='ModelSize', null=True)),
                ('collisionx', models.TextField(blank=True, db_column='CollisionX', null=True)),
                ('collisionz', models.TextField(blank=True, db_column='CollisionZ', null=True)),
                ('interactionrange', models.TextField(blank=True, db_column='InteractionRange', null=True)),
                ('pathfindingtype', models.TextField(blank=True, db_column='PathfindingType', null=True)),
                ('ui', models.TextField(blank=True, db_column='Ui', null=True)),
                ('mapicon', models.TextField(blank=True, db_column='MapIcon', null=True)),
                ('mappriority', models.TextField(blank=True, db_column='MapPriority', null=True)),
                ('interactionkeyicon', models.TextField(blank=True, db_column='InteractionKeyIcon', null=True)),
                ('interactionkeystring', models.TextField(blank=True, db_column='InteractionKeyString', null=True)),
                ('fov', models.TextField(blank=True, db_column='Fov', null=True)),
                ('movespeed', models.TextField(blank=True, db_column='MoveSpeed', null=True)),
                ('maxhp', models.TextField(blank=True, db_column='MaxHp', null=True)),
                ('hptype', models.TextField(blank=True, db_column='HpType', null=True)),
                ('buff', models.TextField(blank=True, db_column='Buff', null=True)),
                ('seatedtime', models.TextField(blank=True, db_column='SeatedTime', null=True)),
                ('unseatedtime', models.TextField(blank=True, db_column='UnSeatedTime', null=True)),
                ('skillid0', models.TextField(blank=True, db_column='SkillId0', null=True)),
                ('skillcount0', models.TextField(blank=True, db_column='SkillCount0', null=True)),
                ('skillid1', models.TextField(blank=True, db_column='SkillId1', null=True)),
                ('skillcount1', models.TextField(blank=True, db_column='SkillCount1', null=True)),
                ('skillid2', models.TextField(blank=True, db_column='SkillId2', null=True)),
                ('skillcount2', models.TextField(blank=True, db_column='SkillCount2', null=True)),
                ('commonactionid0', models.TextField(blank=True, db_column='CommonActionId0', null=True)),
                ('commonactioncount0', models.TextField(blank=True, db_column='CommonActionCount0', null=True)),
                ('commonactionid1', models.TextField(blank=True, db_column='CommonActionId1', null=True)),
                ('commonactioncount1', models.TextField(blank=True, db_column='CommonActionCount1', null=True)),
                ('commonactionid2', models.TextField(blank=True, db_column='CommonActionId2', null=True)),
                ('commonactioncount2', models.TextField(blank=True, db_column='CommonActionCount2', null=True)),
                ('rideonkismetcamera', models.TextField(blank=True, db_column='RideonKismetCamera', null=True)),
                ('dismountkismetcamera', models.TextField(blank=True, db_column='DismountKismetCamera', null=True)),
                ('ridingmode', models.TextField(blank=True, db_column='RidingMode', null=True)),
                ('particlesoundpackage', models.TextField(blank=True, db_column='ParticleSoundPackage', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'EFTable_Vehicle',
            },
        ),
        migrations.CreateModel(
            name='EftableZonebase',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('primarykey', models.TextField(blank=True, db_column='PrimaryKey', null=True)),
                ('secondarykey', models.TextField(blank=True, db_column='SecondaryKey', null=True)),
                ('continent', models.TextField(blank=True, db_column='Continent', null=True)),
                ('continenttype', models.TextField(blank=True, db_column='ContinentType', null=True)),
                ('groupid', models.TextField(blank=True, db_column='GroupId', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('contenttype', models.TextField(blank=True, db_column='ContentType', null=True)),
                ('sectorsize', models.TextField(blank=True, db_column='SectorSize', null=True)),
                ('maxusercount', models.TextField(blank=True, db_column='MaxUserCount', null=True)),
                ('collisioncheckfriendly', models.TextField(blank=True, db_column='CollisionCheckFriendly', null=True)),
                ('collisioncheckhostile', models.TextField(blank=True, db_column='CollisionCheckHostile', null=True)),
                ('collisionchecknpc', models.TextField(blank=True, db_column='CollisionCheckNPC', null=True)),
                ('collisioncheckpc', models.TextField(blank=True, db_column='CollisionCheckPC', null=True)),
                ('obsoletetime', models.TextField(blank=True, db_column='ObsoleteTime', null=True)),
                ('thumbnail', models.TextField(blank=True, db_column='Thumbnail', null=True)),
                ('thumbnailindex', models.TextField(blank=True, db_column='ThumbnailIndex', null=True)),
                ('minimapzoomfactor', models.TextField(blank=True, db_column='MinimapZoomFactor', null=True)),
                ('startinstancedungeonquest', models.TextField(blank=True, db_column='StartInstanceDungeonQuest', null=True)),
                ('substituteconditionquestid', models.TextField(blank=True, db_column='SubstituteConditionQuestId', null=True)),
                ('substitutezoneid', models.TextField(blank=True, db_column='SubstituteZoneId', null=True)),
                ('isprologue', models.TextField(blank=True, db_column='IsPrologue', null=True)),
                ('revivecurrentlocationonly', models.TextField(blank=True, db_column='ReviveCurrentLocationOnly', null=True)),
                ('ispacked', models.TextField(blank=True, db_column='IsPacked', null=True)),
                ('levelfilename', models.TextField(blank=True, db_column='LevelFileName', null=True)),
                ('mapsizeminx', models.TextField(blank=True, db_column='MapSizeMinX', null=True)),
                ('mapsizemaxx', models.TextField(blank=True, db_column='MapSizeMaxX', null=True)),
                ('mapsizeminy', models.TextField(blank=True, db_column='MapSizeMinY', null=True)),
                ('mapsizemaxy', models.TextField(blank=True, db_column='MapSizeMaxY', null=True)),
                ('loadingimage', models.TextField(blank=True, db_column='LoadingImage', null=True)),
                ('loadingsound', models.TextField(blank=True, db_column='LoadingSound', null=True)),
                ('hintgroupid', models.TextField(blank=True, db_column='HintGroupID', null=True)),
                ('zonebuffid', models.TextField(blank=True, db_column='ZoneBuffId', null=True)),
                ('zonebufftarget', models.TextField(blank=True, db_column='ZoneBuffTarget', null=True)),
                ('spotspawngroupid', models.TextField(blank=True, db_column='SpotSpawnGroupId', null=True)),
                ('abletouseextendmap', models.TextField(blank=True, db_column='AbleToUseExtendMap', null=True)),
                ('abletouseminimap', models.TextField(blank=True, db_column='AbleToUseMiniMap', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('mapimage', models.TextField(blank=True, db_column='MapImage', null=True)),
                ('abletousebutton', models.TextField(blank=True, db_column='AbleToUseButton', null=True)),
                ('ui_xlocation', models.TextField(blank=True, db_column='UI_Xlocation', null=True)),
                ('ui_ylocation', models.TextField(blank=True, db_column='UI_Ylocation', null=True)),
                ('ui_center_xlocation', models.TextField(blank=True, db_column='UI_Center_XLocation', null=True)),
                ('ui_center_ylocation', models.TextField(blank=True, db_column='UI_Center_Ylocation', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'EFTable_ZoneBase',
            },
        ),
        migrations.CreateModel(
            name='LookinfosDevice',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('objectname', models.TextField(blank=True, db_column='ObjectName', null=True)),
                ('lookinfokey', models.TextField(blank=True, db_column='LookInfoKey', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('mesh', models.TextField(blank=True, db_column='Mesh', null=True)),
                ('material', models.TextField(blank=True, db_column='Material', null=True)),
                ('actionobject', models.TextField(blank=True, db_column='ActionObject', null=True)),
                ('animset', models.TextField(blank=True, db_column='Animset', null=True)),
                ('physicasset', models.TextField(blank=True, db_column='PhysicAsset', null=True)),
                ('particlesystem', models.TextField(blank=True, db_column='ParticleSystem', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'LookInfos_Device',
            },
        ),
        migrations.CreateModel(
            name='LookinfosNpc',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('objecttype', models.TextField(blank=True, db_column='ObjectType', null=True)),
                ('lookinfokey', models.TextField(blank=True, db_column='LookInfoKey', null=True)),
                ('objectname', models.TextField(blank=True, db_column='ObjectName', null=True)),
                ('isvariation', models.TextField(blank=True, db_column='IsVariation', null=True)),
                ('baseobejctname', models.TextField(blank=True, db_column='BaseObejctName', null=True)),
                ('variationfrom', models.TextField(blank=True, db_column='VariationFrom', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('mesh', models.TextField(blank=True, db_column='Mesh', null=True)),
                ('material', models.TextField(blank=True, db_column='Material', null=True)),
                ('animset', models.TextField(blank=True, db_column='Animset', null=True)),
                ('physicasset', models.TextField(blank=True, db_column='PhysicAsset', null=True)),
                ('actionobject', models.TextField(blank=True, db_column='ActionObject', null=True)),
                ('partsmesh_1', models.TextField(blank=True, db_column='PartsMesh_1', null=True)),
                ('partsmesh_2', models.TextField(blank=True, db_column='PartsMesh_2', null=True)),
                ('partsmesh_3', models.TextField(blank=True, db_column='PartsMesh_3', null=True)),
                ('particlesystem', models.TextField(blank=True, db_column='ParticleSystem', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'LookInfos_Npc',
            },
        ),
        migrations.CreateModel(
            name='LookinfosProp',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('objectname', models.TextField(blank=True, db_column='ObjectName', null=True)),
                ('lookinfokey', models.TextField(blank=True, db_column='LookInfoKey', null=True)),
                ('desc', models.TextField(blank=True, db_column='Desc', null=True)),
                ('mesh', models.TextField(blank=True, db_column='Mesh', null=True)),
                ('material', models.TextField(blank=True, db_column='Material', null=True)),
                ('animset', models.TextField(blank=True, db_column='Animset', null=True)),
                ('physicasset', models.TextField(blank=True, db_column='PhysicAsset', null=True)),
                ('particlesystem', models.TextField(blank=True, db_column='ParticleSystem', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'LookInfos_Prop',
            },
        ),
        migrations.CreateModel(
            name='Namedb',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('key', models.TextField(blank=True, db_column='Key', null=True)),
                ('group', models.TextField(blank=True, db_column='Group', null=True)),
                ('data', models.TextField(blank=True, db_column='Data', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'NameDB',
            },
        ),
    ]
